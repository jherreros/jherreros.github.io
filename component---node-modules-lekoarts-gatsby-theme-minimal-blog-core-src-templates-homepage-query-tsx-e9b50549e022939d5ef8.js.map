{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-homepage-query-tsx-e9b50549e022939d5ef8.js","mappings":"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","sources":["webpack://juan-herreros-personal-site/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/list.tsx","webpack://juan-herreros-personal-site/./src/@lekoarts/gatsby-theme-minimal-blog/texts/hero.mdx","webpack://juan-herreros-personal-site/./src/@lekoarts/gatsby-theme-minimal-blog/texts/bottom.mdx","webpack://juan-herreros-personal-site/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/homepage.tsx","webpack://juan-herreros-personal-site/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/homepage-query.tsx","webpack://juan-herreros-personal-site/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/homepage.tsx","webpack://juan-herreros-personal-site/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://juan-herreros-personal-site/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/blog-list-item.tsx","webpack://juan-herreros-personal-site/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/listing.tsx"],"sourcesContent":["/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx } from \"theme-ui\"\n\ntype ListProps = {\n  children: React.ReactNode\n}\n\nconst List = ({ children }: ListProps) => (\n  <section\n    sx={{\n      mb: [5, 5, 6],\n      ul: { margin: 0, padding: 0 },\n      li: { listStyle: `none`, mb: 3, a: { variant: `links.listItem` } },\n      variant: `section_bottom`,\n    }}\n  >\n    {children}\n  </section>\n)\n\nexport default List\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h3: \"h3\",\n    p: \"p\",\n    img: \"img\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h3, null, \"Welcome to my personal website!\"), \"\\n\", React.createElement(_components.p, null, \"I'm Juan, and here I host my CV and a blog about the creation of this page.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"android-chrome-192x192.png\",\n    alt: \"Logo\"\n  }));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  return React.createElement(React.Fragment);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport { HeadFC, Link } from \"gatsby\"\nimport Layout from \"./layout\"\nimport Title from \"./title\"\nimport Listing from \"./listing\"\nimport List from \"./list\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\nimport { visuallyHidden } from \"../styles/utils\"\nimport Seo from \"./seo\"\nimport Hero from \"../texts/hero.mdx\"\nimport Bottom from \"../texts/bottom.mdx\"\n\nexport type MBHomepageProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n}\n\nconst Homepage = ({ posts }: MBHomepageProps) => {\n  const { basePath, blogPath } = useMinimalBlogConfig()\n  const { siteTitle } = useSiteMetadata()\n\n  return (\n    <Layout>\n      <h1 sx={visuallyHidden}>{siteTitle}</h1>\n      <section sx={{ mb: [5, 6, 7], p: { fontSize: [1, 2, 3], mt: 2 }, variant: `section_hero` }}>\n        <Hero />\n      </section>\n      <Title text=\"Latest Posts\">\n        <Link to={replaceSlashes(`/${basePath}/${blogPath}`)}>Read all posts</Link>\n      </Title>\n      <Listing posts={posts} showTags={false} />\n      <List>\n        <Bottom />\n      </List>\n    </Layout>\n  )\n}\n\nexport default Homepage\n\nexport const Head: HeadFC = () => <Seo />\n","import { graphql } from \"gatsby\"\nimport HomepageComponent, { Head } from \"../components/homepage\"\n\nexport default HomepageComponent\n\nexport { Head }\n\nexport const query = graphql`\n  query ($formatString: String!) {\n    allPost(sort: { date: DESC }, limit: 3) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport Homepage, { Head } from \"../../../components/homepage\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: string\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCoreHomepage({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  return <Homepage posts={allPost.nodes} {...props} />\n}\n\nexport { Head }\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx, Box } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport ItemTags from \"./item-tags\"\n\ntype BlogListItemProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }\n  showTags?: boolean\n}\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={4}>\n    <Link to={post.slug} sx={(t) => ({ ...t.styles?.a, fontSize: [1, 2, 3], color: `text` })}>\n      {post.title}\n    </Link>\n    <p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && showTags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    </p>\n  </Box>\n)\n\nexport default BlogListItem\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport BlogListItem from \"./blog-list-item\"\n\ntype ListingProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  className?: string\n  showTags?: boolean\n}\n\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\n    {posts.map((post) => (\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\n    ))}\n  </section>\n)\n\nexport default Listing\n"],"names":["_ref","children","jsx","sx","mb","ul","margin","padding","li","listStyle","a","variant","_createMdxContent","props","_components","Object","assign","h3","p","img","_provideComponents","components","React","src","alt","wrapper","MDXLayout","posts","basePath","blogPath","useMinimalBlogConfig","siteTitle","useSiteMetadata","Layout","visuallyHidden","fontSize","mt","Hero","Title","text","Link","to","replaceSlashes","Listing","showTags","List","Bottom","Head","Seo","data","allPost","Homepage","nodes","tags","tagsPath","map","tag","i","key","slug","t","_t$styles","styles","name","post","Box","color","title","date","ItemTags","className","BlogListItem"],"sourceRoot":""}